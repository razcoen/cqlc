package golang

import (
	"testing"

	"github.com/razcoen/cqlc/pkg/cqlc/codegen/sdk"
	"github.com/stretchr/testify/require"
)

func TestCreateHeader(t *testing.T) {
	t.Run("nil context", func(t *testing.T) {
		require.Equal(t, "// Code generated by cqlc. DO NOT EDIT.\n", createHeader(nil))
	})
	t.Run("nil sdk context", func(t *testing.T) {
		require.Equal(t, "// Code generated by cqlc. DO NOT EDIT.\n", createHeader(&fileContext{}))
	})
	t.Run("empty sdk context", func(t *testing.T) {
		require.Equal(t, "// Code generated by cqlc. DO NOT EDIT.\n", createHeader(&fileContext{Context: &sdk.Context{}}))
	})
	t.Run("context without path", func(t *testing.T) {
		require.Equal(t, `// Code generated by cqlc. DO NOT EDIT.
// cqlc version: v1.0.0-rc-8
// config: cqlc.yaml
// schema: schema.cql
// queries: queries.cql
`, createHeader(&fileContext{
			Context: &sdk.Context{
				Version:     "v1.0.0-rc-8",
				ConfigPath:  "cqlc.yaml",
				SchemaPath:  "schema.cql",
				QueriesPath: "queries.cql",
			},
		}))
	})
	t.Run("context with invalid path", func(t *testing.T) {
		require.Equal(t, `// Code generated by cqlc. DO NOT EDIT.
// cqlc version: v1.0.0-rc-8
// config: cqlc.yaml
// schema: schema.cql
// queries: queries.cql
`, createHeader(&fileContext{
			Context: &sdk.Context{
				Version:     "v1.0.0-rc-8",
				ConfigPath:  "cqlc.yaml",
				SchemaPath:  "schema.cql",
				QueriesPath: "queries.cql",
			},
			path: "$../../909visj0990i!..!j9o9/../jio.io0j.",
		}))
	})
	t.Run("full context", func(t *testing.T) {
		require.Equal(t, `// Code generated by cqlc. DO NOT EDIT.
// cqlc version: v1.0.0-rc-8
// config: ../cqlc.yaml
// schema: ../schema.cql
// queries: ../queries.cql
`, createHeader(&fileContext{
			Context: &sdk.Context{
				Version:     "v1.0.0-rc-8",
				ConfigPath:  "cqlc.yaml",
				SchemaPath:  "schema.cql",
				QueriesPath: "queries.cql",
			},
			path: "example/client.go",
		}))
	})
}
