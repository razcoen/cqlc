// Code generated by cqlc. DO NOT EDIT.
// schema: ../../testdata/basic_schema.cql
// queries: ../../testdata/basic_queries.cql

package basic

import (
	"fmt"

	"github.com/gocql/gocql"
	"github.com/razcoen/cqlc/pkg/gocqlc"
)

type Client struct {
	session *gocql.Session
	logger  gocqlc.Logger
}

func NewClient(session *gocql.Session, logger gocqlc.Logger) (*Client, error) {
	if session == nil {
		return nil, fmt.Errorf("session cannot be nil")
	}
	if session.Closed() {
		return nil, fmt.Errorf("session already closed")
	}
	if logger == nil {
		logger = &gocqlc.NoopLogger{}
	}
	return &Client{session: session, logger: logger}, nil
}

func (c *Client) Close() error {
	c.session.Close()
	return nil
}
