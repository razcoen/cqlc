// Code generated by cqlc. DO NOT EDIT.
// cqlc version: (devel)
// config: ../cqlc.yaml
// schema: ../schema.cql
// queries: ../queries.cql

package example

import (
	"time"

	"github.com/gocql/gocql"
	"github.com/razcoen/cqlc/pkg/gocqlc"
)

type ListUserPostsParams struct {
	UserID    gocql.UUID
	CreatedAt time.Time
}

type ListUserPostsRow struct {
	UserID    gocql.UUID
	CreatedAt time.Time
	Content   string
	PostID    gocql.UUID
}

func (c *Client) ListUserPosts(params *ListUserPostsParams, opts ...gocqlc.QueryOption) *gocqlc.Querier[ListUserPostsRow] {
	session := c.Session()
	q := session.Query("SELECT * FROM posts WHERE user_id = ? AND created_at = ?;", params.UserID, params.CreatedAt)
	scan := func(it *gocql.Iter, dest *ListUserPostsRow) bool {
		return it.Scan(&(*dest).UserID, &(*dest).CreatedAt, &(*dest).Content, &(*dest).PostID)
	}
	return gocqlc.NewQuerier(q, scan, c.Logger(), c.DefaultQueryOptions()...)
}
